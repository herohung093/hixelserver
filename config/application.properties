## Hixel server configuration ##

## Debug Settings
debug = false
spring.mail.properties.mail.debug = false
spring.mail.test-connection: false

## HTTPS Settings
# NOTE: In production, use an SSL certificate from a Certificate Authority
server.port: 8443
security.require-ssl: true
server.ssl.key-store: file:config/keystore.p12
server.ssl.key-store-password: USE_A_STRONGER_PASSWORD_THAN_ME
server.ssl.key-store-type: PKCS12
server.ssl.key-alias: tomcat

## Database Settings
# The server is database-agnostic, but currently set up for PostgreSQL
spring.datasource.url: jdbc:postgresql://localhost:5432/postgres
spring.datasource.username: postgres
spring.datasource.password: PASSWORD
spring.datasource.platform: postgresql
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: false

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto: none

## Email Settings
# Used for Password-Reset emails
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.username: hixel.dev@gmail.com
spring.mail.password: EMAIL_PASSWORD
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls.enable: true
spring.mail.properties.mail.smtp.ssl.trust: smtp.gmail.com

## Response Size (number)
# Number of SearchEntry responses returned by the /search endpoint.
search.response-size: 5

## Ingestion Interval (milliseconds)
# Time between CSV ingestions from the NASDAQ and NYSE stock exchanges to populate the SearchDataRepository.
search.ingestion-interval: 86400000

## Years Max (number)
# Max number of years of financial history that can be requested from the /companydata endpoint. (&years parameter)
company-data.years-max: 5

## XBRL US API Key (String)
# The API Key which is used when retrieving data from the XBRL US API
company-data.xbrl-api-key = 682bdbe3-d3ac-4944-830f-c2e78e746b35

## CompanyData Cache Expiration (milliseconds)
# Time before a CompanyData cache entry is evicted from memory after not being accessed.
company-data.cache.expire = 86400000

## CompanyData Cache Refresh (milliseconds)
# Time before a CompanyData cache entry is refreshed on access. 
# NOTE: A refresh will asynchronously perform new API calls
company-data.cache.refresh = 900000